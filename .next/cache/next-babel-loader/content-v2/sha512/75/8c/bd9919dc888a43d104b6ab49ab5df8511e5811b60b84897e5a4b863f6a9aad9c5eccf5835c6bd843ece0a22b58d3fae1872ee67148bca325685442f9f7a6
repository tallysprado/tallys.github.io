{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"/home/runner/work/tallysprado.github.io/tallysprado.github.io/src/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useState, useEffect } from \"react\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport Jquery from \"jquery\";\nimport $ from \"jquery\";\nimport { TransitionGroup, Transition, CSSTransition } from \"react-transition-group\";\nimport { faWhatsapp, faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nvar buttons = [\"InÃ­cio\", \"Sobre mim\", \"Contato\"];\nvar icons = [faWhatsapp, faGithub, faLinkedin];\n\nvar Buttons = function Buttons(props) {\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n    className: \"buttons\",\n    children: buttons.map(function (button) {\n      return /*#__PURE__*/_jsx(\"button\", {\n        children: button\n      });\n    })\n  }));\n};\n\nvar Header = function Header(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n      className: \"presentation\",\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        src: \"/perfil.jpeg\",\n        height: 150,\n        width: 150,\n        className: \"image\"\n      }), /*#__PURE__*/_jsx(\"h1\", {\n        children: \"< Tallys Prado />\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: /*#__PURE__*/_jsx(\"i\", {\n          children: \"Coding made simple.\"\n        })\n      })]\n    })), /*#__PURE__*/_jsx(Buttons, _objectSpread({}, props))]\n  });\n};\n\nvar Links = function Links(props) {\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n    id: \"links\",\n    className: \"links\",\n    children: icons.map(function (icon) {\n      return /*#__PURE__*/_jsx(FontAwesomeIcon, {\n        size: \"2x\",\n        color: \"#f2a365\",\n        className: \"icon\",\n        icon: icon\n      });\n    })\n  }));\n};\n\nfunction growAnimation(document, animationPercentage) {\n  var animationDecimal = animationPercentage / 100; // Your existing .grow CSS values\n\n  var startPositionPercent = 50; // top/left at start of animation\n\n  var finishSizePercent = 300; // width/height at end of animation\n\n  var finishPositionPercent = -100; // top/left at end of animation\n  // The current CSS values, based on how far the user has scrolled\n\n  var currentSizePercent = getProgressFromTo(0, finishSizePercent, animationDecimal);\n  var currentPositionPercent = getProgressFromTo(startPositionPercent, finishPositionPercent, animationDecimal);\n  $(document).ready(function () {\n    $(\".links\").css({\n      zIndex: 5000,\n      top: \"\".concat(currentPositionPercent + 20, \"%\")\n    });\n  });\n} // A util function to get the progress between two values\n// e.g. 50% between 0 and 10 is 5\n\n\nfunction getProgressFromTo(from, to, animationDecimal) {\n  return from + (to - from) * animationDecimal;\n}\n\nexport default function Menu() {\n  var _useState = useState(true),\n      isOpen = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState(),\n      windowOffset = _useState2[0],\n      setWindowOffset = _useState2[1];\n\n  useEffect(function () {\n    if (true) {\n      window.onscroll = function () {\n        var currentScrollPosition = window.pageYOffset;\n        var h = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);\n        var index = parseInt((currentScrollPosition + 0.25 * h) / h);\n\n        if (index == 0) {\n          setOpen(true);\n        } else {\n          setOpen(false);\n        }\n\n        setWindowOffset(Math.min(100 / currentScrollPosition, 1));\n      };\n\n      var scrollTop = $(window).scrollTop();\n      var documentHeight = $(document).height();\n      var windowHeight = $(window).height();\n      var scrollPercent = scrollTop / (documentHeight - windowHeight) * 100;\n      growAnimation(document, scrollPercent);\n    }\n  });\n  /*\n  return (\n    <TransitionGroup className=\"menu\">\n      <CSSTransition\n      key={0}\n      timeout={1000}\n      classNames='fade'\n      >\n        <FadeMenu in={isOpen} />\n      </CSSTransition>\n    </TransitionGroup>\n  );\n  */\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    id: \"menu\",\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsx(Header, {\n      style: {\n        opacity: windowOffset < 0.2 ? \"0\" : windowOffset\n      }\n    }), /*#__PURE__*/_jsx(Links, {})]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}